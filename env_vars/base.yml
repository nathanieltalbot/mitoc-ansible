---

root_name: mitoc
client_root_name: root_certificate

# Set this flag to true so you can checkout code from a private git repository
# which is setup with an SSH key.
ssh_forward_agent: false

django_project_name: mitoc-trips
django_application_name: ws

flask_project_name: mitoc-member
flask_application_name: member


# Database settings.
# Hard-coded as the application name, but this is how it's configured on RDS
db_user: "ws"
db_name: "ws"
auth_db_name: "auth_db"


# RabbitMQ settings.
# (We'll always run RabbitMQ on the same server, regardless of deployment)
rabbitmq_server_name: "{{ inventory_hostname }}"
celery_broker_url: "amqp://{{ rabbitmq_application_user }}:{{ rabbitmq_application_password }}@localhost/{{ rabbitmq_application_vhost }}"

# Application settings
run_django_db_migrations: true
run_django_collectstatic: true
django_settings_file: "{{ django_application_name }}.settings"  # Dev/prod determined by envvar


# Worker settings
# For consistency, keep workers constant across dev, prod, and local
# (Load is always fairly low, regardless of environment)
gunicorn_num_workers: 3  # A good rule to follow is 2 x number of CPUs + 1
celery_num_workers: 2


# This is the SSL fingerprint of the DocuSign DEMO API, Obtained by running:
#     openssl x509 -in <cert> -noout -fingerprint
# On the demo Connect certificate on DocuSign's website
# https://trust.docusign.com/en-us/trust-certifications/docusign-public-certificates/
# (The production fingerprint must be used in prod, for obvious reasons)
docusign_client_fingerprint: 4f513c7089e3a6e4c47bceec321a6548b57ae969

cybersource_secret_key: "secret"
verify_cybersource_signature: "true"

root_crt: |
  -----BEGIN CERTIFICATE-----
  MIIDrzCCApegAwIBAgIQCDvgVpBCRrGhdWrJWZHHSjANBgkqhkiG9w0BAQUFADBh
  MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3
  d3cuZGlnaWNlcnQuY29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBD
  QTAeFw0wNjExMTAwMDAwMDBaFw0zMTExMTAwMDAwMDBaMGExCzAJBgNVBAYTAlVT
  MRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5j
  b20xIDAeBgNVBAMTF0RpZ2lDZXJ0IEdsb2JhbCBSb290IENBMIIBIjANBgkqhkiG
  9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4jvhEXLeqKTTo1eqUKKPC3eQyaKl7hLOllsB
  CSDMAZOnTjC3U/dDxGkAV53ijSLdhwZAAIEJzs4bg7/fzTtxRuLWZscFs3YnFo97
  nh6Vfe63SKMI2tavegw5BmV/Sl0fvBf4q77uKNd0f3p4mVmFaG5cIzJLv07A6Fpt
  43C/dxC//AH2hdmoRBBYMql1GNXRor5H4idq9Joz+EkIYIvUX7Q6hL+hqkpMfT7P
  T19sdl6gSzeRntwi5m3OFBqOasv+zbMUZBfHWymeMr/y7vrTC0LUq7dBMtoM1O/4
  gdW7jVg/tRvoSSiicNoxBN33shbyTApOB6jtSj1etX+jkMOvJwIDAQABo2MwYTAO
  BgNVHQ8BAf8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUA95QNVbR
  TLtm8KPiGxvDl7I90VUwHwYDVR0jBBgwFoAUA95QNVbRTLtm8KPiGxvDl7I90VUw
  DQYJKoZIhvcNAQEFBQADggEBAMucN6pIExIK+t1EnE9SsPTfrgT1eXkIoyQY/Esr
  hMAtudXH/vTBH1jLuG2cenTnmCmrEbXjcKChzUyImZOMkXDiqw8cvpOp/2PV5Adg
  06O/nVsJ8dWO41P0jmP6P6fbtGbfYmbW0W5BjfIttep3Sp+dWOIrWcBAI+0tKIJF
  PnlUkiaY4IBIqDfv8NZ5YBberOgOzW6sRBc4L0na4UU+Krk2U886UAb3LujEV0ls
  YSEY1QSteDwsOoBrp+uvFRTp2InBuThs4pFsiv9kuXclVzDAGySj4dzp30d8tbQk
  CAUw7C29C79Fv1C5qfPrmAESrciIxpg0X40KPMbp1ZWVbd4=
  -----END CERTIFICATE-----

api_url: api.mitoc-trips.local
mutual_tls_api_url: tls.mitoc-trips.local
